
Book モデルに関するテスト
  実際に保存してみる
    有効な投稿内容の場合は保存されるか
  空白のバリデーションチェック
    titleが空白の場合にバリデーションチェックされ空白のエラーメッセージが返ってきているか
    bodyが空白の場合にバリデーションチェックされ空白のエラーメッセージが返ってきているか
  titleを空白で投稿した場合に画面にエラーメッセージが表示されているか
    エラーメッセージは正しく表示されるか
  bodyを空白で投稿した場合に画面にエラーメッセージが表示されているか
    エラーメッセージは正しく表示されるか

投稿のテスト
  トップ画面(root_path)のテスト
    表示の確認
      トップ画面(root_path)に一覧ページへのリンクが表示されているか (FAILED - 1)
      root_pathが"/"であるか (FAILED - 2)
  一覧画面のテスト
    一覧の表示とリンクの確認
      bookの一覧表示(tableタグ)と投稿フォームが同一画面に表示されているか
      bookのタイトルと感想を表示し、詳細・編集・削除のリンクが表示されているか
      Create Bookボタンが表示される (FAILED - 3)
    投稿処理に関するテスト
      投稿に成功しサクセスメッセージが表示されるか (FAILED - 4)
      投稿に失敗する (FAILED - 5)
      投稿後のリダイレクト先は正しいか (FAILED - 6)
    book削除のテスト
      application.html.erbにjavascript_pack_tagを含んでいるか
      bookの削除 (FAILED - 7)
  詳細画面のテスト
    表示の確認
      本のタイトルと感想が画面に表示されていること
      Editリンクが表示される
      Backリンクが表示される
    リンクの遷移先の確認
      Editの遷移先は編集画面か (FAILED - 8)
      Backの遷移先は一覧画面か
  編集画面のテスト
    表示の確認
      編集前のタイトルと感想がフォームに表示(セット)されている
      Update Bookボタンが表示される (FAILED - 9)
      Showリンクが表示される
      Backリンクが表示される
    リンクの遷移先の確認
      Showの遷移先は詳細画面か (FAILED - 10)
      Backの遷移先は一覧画面か
    更新処理に関するテスト
      更新に成功しサクセスメッセージが表示されるか (FAILED - 11)
      更新に失敗しエラーメッセージが表示されるか (FAILED - 12)
      更新後のリダイレクト先は正しいか (FAILED - 13)

Failures:

  1) 投稿のテスト トップ画面(root_path)のテスト 表示の確認 トップ画面(root_path)に一覧ページへのリンクが表示されているか
     Failure/Error: visit root_path

     NameError:
       undefined local variable or method `root_path' for #<RSpec::ExampleGroups::Nested::RootPath::Nested "トップ画面(root_path)に一覧ページへのリンクが表示されているか" (./spec/system/books_spec.rb:10)>
     # ./spec/system/books_spec.rb:7:in `block (3 levels) in <main>'

  2) 投稿のテスト トップ画面(root_path)のテスト 表示の確認 root_pathが"/"であるか
     Failure/Error: visit root_path

     NameError:
       undefined local variable or method `root_path' for #<RSpec::ExampleGroups::Nested::RootPath::Nested "root_pathが"/"であるか" (./spec/system/books_spec.rb:13)>
     # ./spec/system/books_spec.rb:7:in `block (3 levels) in <main>'

  3) 投稿のテスト 一覧画面のテスト 一覧の表示とリンクの確認 Create Bookボタンが表示される
     Failure/Error: expect(page).to have_button 'Create Book'
       expected to find button "Create Book" that is not disabled but there were no matches
     # ./spec/system/books_spec.rb:52:in `block (4 levels) in <main>'

  4) 投稿のテスト 一覧画面のテスト 投稿処理に関するテスト 投稿に成功しサクセスメッセージが表示されるか
     Failure/Error: click_button 'Create Book'

     Capybara::ElementNotFound:
       Unable to find button "Create Book" that is not disabled
     # ./spec/system/books_spec.rb:59:in `block (4 levels) in <main>'

  5) 投稿のテスト 一覧画面のテスト 投稿処理に関するテスト 投稿に失敗する
     Failure/Error: click_button 'Create Book'

     Capybara::ElementNotFound:
       Unable to find button "Create Book" that is not disabled
     # ./spec/system/books_spec.rb:63:in `block (4 levels) in <main>'

  6) 投稿のテスト 一覧画面のテスト 投稿処理に関するテスト 投稿後のリダイレクト先は正しいか
     Failure/Error: click_button 'Create Book'

     Capybara::ElementNotFound:
       Unable to find button "Create Book" that is not disabled
     # ./spec/system/books_spec.rb:70:in `block (4 levels) in <main>'

  7) 投稿のテスト 一覧画面のテスト book削除のテスト bookの削除
     Failure/Error: expect(current_path).to eq('/books')

       expected: "/books"
            got: "/bookers/books"

       (compared using ==)
     # ./spec/system/books_spec.rb:91:in `block (4 levels) in <main>'

  8) 投稿のテスト 詳細画面のテスト リンクの遷移先の確認 Editの遷移先は編集画面か
     Failure/Error: expect(current_path).to eq('/books/' + book.id.to_s + '/edit')

       expected: "/books/1/edit"
            got: "/bookers/books/1/edit"

       (compared using ==)
     # ./spec/system/books_spec.rb:117:in `block (4 levels) in <main>'

  9) 投稿のテスト 編集画面のテスト 表示の確認 Update Bookボタンが表示される
     Failure/Error: expect(page).to have_button 'Update Book'
       expected to find button "Update Book" that is not disabled but there were no matches
     # ./spec/system/books_spec.rb:136:in `block (4 levels) in <main>'

  10) 投稿のテスト 編集画面のテスト リンクの遷移先の確認 Showの遷移先は詳細画面か
      Failure/Error: expect(current_path).to eq('/books/' + book.id.to_s)

        expected: "/books/1"
             got: "/bookers/books/1"

        (compared using ==)
      # ./spec/system/books_spec.rb:151:in `block (4 levels) in <main>'

  11) 投稿のテスト 編集画面のテスト 更新処理に関するテスト 更新に成功しサクセスメッセージが表示されるか
      Failure/Error: click_button 'Update Book'

      Capybara::ElementNotFound:
        Unable to find button "Update Book" that is not disabled
      # ./spec/system/books_spec.rb:163:in `block (4 levels) in <main>'

  12) 投稿のテスト 編集画面のテスト 更新処理に関するテスト 更新に失敗しエラーメッセージが表示されるか
      Failure/Error: click_button 'Update Book'

      Capybara::ElementNotFound:
        Unable to find button "Update Book" that is not disabled
      # ./spec/system/books_spec.rb:169:in `block (4 levels) in <main>'

  13) 投稿のテスト 編集画面のテスト 更新処理に関するテスト 更新後のリダイレクト先は正しいか
      Failure/Error: click_button 'Update Book'

      Capybara::ElementNotFound:
        Unable to find button "Update Book" that is not disabled
      # ./spec/system/books_spec.rb:175:in `block (4 levels) in <main>'

Finished in 1.29 seconds (files took 3.3 seconds to load)
29 examples, 13 failures

Failed examples:

rspec ./spec/system/books_spec.rb:10 # 投稿のテスト トップ画面(root_path)のテスト 表示の確認 トップ画面(root_path)に一覧ページへのリンクが表示されているか
rspec ./spec/system/books_spec.rb:13 # 投稿のテスト トップ画面(root_path)のテスト 表示の確認 root_pathが"/"であるか
rspec ./spec/system/books_spec.rb:51 # 投稿のテスト 一覧画面のテスト 一覧の表示とリンクの確認 Create Bookボタンが表示される
rspec ./spec/system/books_spec.rb:56 # 投稿のテスト 一覧画面のテスト 投稿処理に関するテスト 投稿に成功しサクセスメッセージが表示されるか
rspec ./spec/system/books_spec.rb:62 # 投稿のテスト 一覧画面のテスト 投稿処理に関するテスト 投稿に失敗する
rspec ./spec/system/books_spec.rb:67 # 投稿のテスト 一覧画面のテスト 投稿処理に関するテスト 投稿後のリダイレクト先は正しいか
rspec ./spec/system/books_spec.rb:86 # 投稿のテスト 一覧画面のテスト book削除のテスト bookの削除
rspec ./spec/system/books_spec.rb:114 # 投稿のテスト 詳細画面のテスト リンクの遷移先の確認 Editの遷移先は編集画面か
rspec ./spec/system/books_spec.rb:135 # 投稿のテスト 編集画面のテスト 表示の確認 Update Bookボタンが表示される
rspec ./spec/system/books_spec.rb:148 # 投稿のテスト 編集画面のテスト リンクの遷移先の確認 Showの遷移先は詳細画面か
rspec ./spec/system/books_spec.rb:160 # 投稿のテスト 編集画面のテスト 更新処理に関するテスト 更新に成功しサクセスメッセージが表示されるか
rspec ./spec/system/books_spec.rb:166 # 投稿のテスト 編集画面のテスト 更新処理に関するテスト 更新に失敗しエラーメッセージが表示されるか
rspec ./spec/system/books_spec.rb:172 # 投稿のテスト 編集画面のテスト 更新処理に関するテスト 更新後のリダイレクト先は正しいか

